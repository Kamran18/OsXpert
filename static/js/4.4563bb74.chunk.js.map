{"version":3,"sources":["../node_modules/@material-ui/icons/ClearRounded.js","../node_modules/@material-ui/icons/CheckRounded.js","pageReplacement/pageComponents/form.js","pageReplacement/pageComponents/output.js","pageReplacement/algorithms/fifo.js","pageReplacement/algorithms/optimal.js","pageReplacement/algorithms/lru.js","pageReplacement/page.js"],"names":["_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","default","React","_default","createElement","d","useStyles","makeStyles","theme","paper","boxShadow","border","padding","marginTop","marginBottom","transition","root","margin","spacing","inputs","minWidth","gridItem","textAlign","btn_container","display","flexWrap","justifyContent","width","btns","SimpleSelect","getDataFromAlgo","classes","useState","algo","setAlgo","frames","setFrames","refStr","setStr","handleChangeField","event","console","log","target","id","clearEntries","Paper","className","Grid","container","justify","item","xs","Typography","variant","noValidate","autoComplete","onSubmit","preventDefault","FormControl","style","InputLabel","Select","labelId","onChange","size","MenuItem","TextField","label","multiline","rowsMax","type","InputLabelProps","shrink","paddingLeft","Button","onClick","color","disabled","table","section","createMuiTheme","overrides","MuiTableCell","DenseTable","algoData","div","initial","y","animate","duration","Divider","error_message","Algorithm","opacity","Reference_string","Reference_string_length","Total_Frames","Faults","Hits","TableContainer","ThemeProvider","Table","aria-label","TableHead","backgroundColor","TableRow","TableCell","align","fontWeight","ref_string_list","map","num","TableBody","frame_rows","row","hover","component","scope","entry","Hits_row","outputCompatibleFifoData","ref_str","nframes","frames_state","faults","hits_row","detailSteps","push","Array","fill","length","i","frameId","indexOf","fifoAlgo","tableData","temp","j","outputCompatibleOptimalData","frameNum","location","optimalAlgo","outputCompatibleLRUData","lastIndexOf","lruAlgo","flexGrow","PageReplacement","setstate","md","split","x","Number","getNumList","forEach","element","checkError"],"mappings":"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","file":"static/js/4.4563bb74.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M18.3 5.71a.9959.9959 0 00-1.41 0L12 10.59 7.11 5.7a.9959.9959 0 00-1.41 0c-.39.39-.39 1.02 0 1.41L10.59 12 5.7 16.89c-.39.39-.39 1.02 0 1.41.39.39 1.02.39 1.41 0L12 13.41l4.89 4.89c.39.39 1.02.39 1.41 0 .39-.39.39-1.02 0-1.41L13.41 12l4.89-4.89c.38-.38.38-1.02 0-1.4z\"\n}), 'ClearRounded');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M9 16.17L5.53 12.7a.9959.9959 0 00-1.41 0c-.39.39-.39 1.02 0 1.41l4.18 4.18c.39.39 1.02.39 1.41 0L20.29 7.71c.39-.39.39-1.02 0-1.41a.9959.9959 0 00-1.41 0L9 16.17z\"\n}), 'CheckRounded');\n\nexports.default = _default;","import React from 'react';\r\nimport { makeStyles, InputLabel ,MenuItem ,FormControl ,Select ,\r\n  TextField ,Button ,Paper ,Grid ,Typography} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  //paper\r\n  paper : {\r\n    boxShadow:'none',\r\n    border: '1px solid #e0e0e0',\r\n    padding: '10px 40px',\r\n    marginTop: '30px',\r\n    marginBottom: '30px',\r\n    transition: 'box-shadow 200ms cubic-bezier(0, 0, 0.1, 0.46)',\r\n    '&:hover':{\r\n        boxShadow: '0 1px 2px 0 rgba(60,64,67,0.302), 0 2px 6px 2px rgba(60,64,67,0.149)',\r\n      }\r\n  },\r\n  //form\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  //inputs\r\n  inputs: {\r\n    minWidth: '100%',\r\n  },\r\n  gridItem: {\r\n    textAlign: 'center'\r\n  },\r\n  btn_container:{\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'space-between',\r\n    width: '100%',\r\n  },\r\n  btns: {\r\n    minWidth: 100,\r\n    marginBottom: '8px',\r\n  },\r\n}));\r\n\r\nexport default function SimpleSelect({getDataFromAlgo}) {\r\n  const classes = useStyles();\r\n\r\n  const [algo, setAlgo] = React.useState('');   //algo\r\n  const [frames, setFrames] = React.useState('');  //no. of frames\r\n  const [refStr, setStr] = React.useState(''); //ref. string\r\n\r\n  const handleChangeAlgo = (event) => {\r\n    console.log(event.target.value);\r\n    setAlgo(event.target.value);\r\n  };\r\n\r\n  const handleChangeField = (event) => {\r\n    console.log(event.target.value);\r\n    switch(event.target.id){\r\n      case 'Reference String':   \r\n        setStr(event.target.value);\r\n        break;\r\n      case 'Frames of physical memory':\r\n        if(event.target.value >= 0)\r\n          setFrames(event.target.value);\r\n        break;\r\n      default:\r\n        console.log('PageReaplcement/form/switch');\r\n    }\r\n  };\r\n\r\n  const clearEntries = () => {\r\n    setAlgo('');\r\n    setFrames('');\r\n    setStr('');\r\n  }\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    getDataFromAlgo(algo, refStr, frames);\r\n    clearEntries();\r\n    console.log('Submited successfully');\r\n  }\r\n\r\n  return (\r\n      <Paper className={classes.paper}>\r\n        <Grid container justify='center'>\r\n\r\n          <Grid item xs={12} className={classes.gridItem}>\r\n              <Typography variant='h5'>\r\n                Page Replacement\r\n              </Typography>\r\n            </Grid>    \r\n\r\n          <Grid item xs={12} className={classes.gridItem}>\r\n            <form className={classes.root} noValidate\r\n            autoComplete=\"off\" onSubmit={handleSubmit}>\r\n                \r\n              <Grid item xs={12} className={classes.gridItem}>\r\n                  <FormControl className={classes.inputs} style={{margin:'8px'}}>\r\n                      <InputLabel id=\"demo-simple-select-label\">Algorithm</InputLabel>\r\n                      <Select\r\n                      labelId=\"demo-simple-select-label\"\r\n                      id=\"demo-simple-select\"\r\n                      value={algo}\r\n                      onChange={handleChangeAlgo}\r\n                      size='small'\r\n                      >\r\n                      <MenuItem value={'First in First out (FIFO)'}>\r\n                        First in First out (FIFO)\r\n                      </MenuItem>\r\n                      <MenuItem value={'Least Recently Used (LRU)'}>\r\n                        Least Recently Used (LRU)\r\n                      </MenuItem>\r\n                      <MenuItem value={'Optimal'}>\r\n                        Optimal\r\n                      </MenuItem>\r\n                      </Select>\r\n                  </FormControl>\r\n              </Grid>\r\n\r\n              <Grid item xs={12} className={classes.gridItem}>\r\n                  <TextField\r\n                  className={classes.inputs}\r\n                  id=\"Reference String\"\r\n                  label=\"Reference String\"\r\n                  multiline\r\n                  rowsMax={4}\r\n                  value={refStr}\r\n                  onChange={handleChangeField}\r\n                  size='small'\r\n                  />\r\n              </Grid>\r\n\r\n              <br/>\r\n\r\n              <Grid item xs={12} className={classes.gridItem}>\r\n                  <TextField\r\n                  className={classes.inputs}\r\n                  id=\"Frames of physical memory\"\r\n                  label=\"Frames of physical memory\"\r\n                  type=\"number\"\r\n                  onChange={handleChangeField}\r\n                  value={frames}\r\n                  size='small'\r\n                  InputLabelProps={{\r\n                      shrink: true,\r\n                  }}\r\n                  />\r\n              </Grid>\r\n\r\n              <br/>\r\n\r\n              <Grid item xs={12} className={classes.btn_container} style={{paddingLeft: '9px'}}>\r\n                  <Button \r\n                    onClick = {clearEntries}\r\n                    className={classes.btns}\r\n                    variant=\"outlined\"\r\n                    color='secondary'\r\n                    size='small'>\r\n                      Clear\r\n                  </Button>\r\n                  <Button type='submit' \r\n                    disabled={!algo || !refStr ||\r\n                      (!frames && frames !== 0)}\r\n                    className={classes.btns}\r\n                    color='primary'\r\n                    variant=\"outlined\"\r\n                    size='small'>\r\n                      Submit\r\n                  </Button>\r\n              </Grid>\r\n\r\n            </form>\r\n          </Grid>\r\n        </Grid>\r\n    </Paper>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles, ThemeProvider, createMuiTheme, Table ,\r\n  Typography , TableBody ,TableCell , TableContainer ,TableHead ,\r\n  TableRow ,Paper , Divider } from '@material-ui/core';\r\nimport CheckRoundedIcon from '@material-ui/icons/CheckRounded';\r\nimport ClearRoundedIcon from '@material-ui/icons/ClearRounded';\r\nimport { motion } from \"framer-motion\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: { \r\n    padding: theme.spacing(3),\r\n    boxShadow:'none',\r\n  },\r\n  table: { \r\n    minWidth: 650,\r\n  },\r\n  section: { \r\n    margin: theme.spacing(2) ,\r\n  },\r\n  gridItem: {\r\n    marginBottom: theme.spacing(2),\r\n    textAlign: 'center'\r\n  }\r\n}));\r\n\r\nconst theme = createMuiTheme({\r\n  overrides: {\r\n      MuiTableCell: {\r\n        root: {\r\n          border: '1px dotted #e0e0e0',\r\n        }\r\n      }\r\n  },\r\n});\r\n\r\nexport default function DenseTable({algoData}) {\r\n  const classes = useStyles();\r\n\r\n  const getTable = () => (\r\n    <TableContainer>\r\n        <ThemeProvider theme={theme}>\r\n        <Table className={classes.table} aria-label=\"a dense table\">\r\n          {/* Table Head/Refrence string */}\r\n          <TableHead style={{backgroundColor: '#bbdefb'}}>\r\n            <TableRow >\r\n              <TableCell align='left' style={{fontWeight: 'bold', minWidth:'80px'}}> String </TableCell>\r\n              {algoData.ref_string_list.map( (num, id) => (\r\n                  <TableCell align='center'style={{fontWeight: 'bold'}} key={id}>\r\n                    {num}\r\n                  </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n\r\n          <TableBody>\r\n            {/* Frames rows */}\r\n            {algoData.frame_rows.map((row, id) => (\r\n              <TableRow key={id} hover={true}>\r\n                <TableCell component=\"th\" scope=\"row\" align='left'>\r\n                  { 'Frame ' + (id+1)}\r\n                </TableCell> \r\n                \r\n                {row.map((entry, id) => (\r\n                  <TableCell component=\"th\" scope=\"row\" align='center' key={entry+''+id}>\r\n                    {entry !== -1? entry: ''}\r\n                  </TableCell> \r\n                ))}\r\n              </TableRow>\r\n            ))}\r\n\r\n            {/* Hits row */}\r\n            <TableRow >\r\n              <TableCell component=\"th\" scope=\"row\" align='left'>\r\n                Hits\r\n              </TableCell> \r\n              {algoData.Hits_row.map( (num, id) => (\r\n                <TableCell component=\"th\" scope=\"row\" align='center' key={id}>\r\n                  {num === 0 ? <ClearRoundedIcon  style={{color: 'red'}}/>:<CheckRoundedIcon style={{color: 'green'}}/>}\r\n                </TableCell> \r\n              ))}\r\n            </TableRow>\r\n          </TableBody>\r\n        </Table>\r\n          </ThemeProvider>\r\n      </TableContainer>\r\n  )\r\n\r\n  return (\r\n    <Paper className={classes.paper}>\r\n      <div className={classes.gridItem}>\r\n        <Typography variant='h4'> Page Replacement Output </Typography>\r\n      </div>\r\n\r\n      <div className={classes.section}>\r\n        <motion.div\r\n        initial={{y : -5}}\r\n        animate={{y : 0}}\r\n        transition={{ duration: 0.6 }}>\r\n          <Typography variant='h5'>\r\n            Input Summary\r\n          </Typography>\r\n        </motion.div>\r\n        <br/><Divider />\r\n\r\n        {\r\n          algoData.error_message === 1 ?\r\n            <Typography variant='h5' style={{color:'tomato'}}>\r\n                Incorrect input check enter data and try again\r\n            </Typography> : ''\r\n        }\r\n        {algoData.Algorithm !== '' ?\r\n          <motion.div\r\n          initial={{opacity : 0}}\r\n          animate={{ opacity: 1}}\r\n          transition={{ duration: 0.8 }}>\r\n            <div className={classes.section}>\r\n              <Typography variant='subtitle1'>\r\n                Algorithm :: <i>{algoData.Algorithm}</i>\r\n              </Typography>\r\n              <Typography variant='subtitle1'>\r\n                String :: <i>{algoData.Reference_string}</i>\r\n              </Typography>\r\n              <Typography variant='subtitle1'>\r\n                Reference string length :: <i>{algoData.Reference_string_length}</i>\r\n              </Typography>\r\n              <Typography variant='subtitle1'>\r\n                Total Frames :: <i>{algoData.Total_Frames}</i>\r\n              </Typography>\r\n              <Typography variant='subtitle1'>\r\n                Faults :: <i>{algoData.Faults}</i>\r\n              </Typography>\r\n              <Typography variant='subtitle1'>\r\n                Hits :: <i>{algoData.Hits}</i>\r\n              </Typography>\r\n            </div>\r\n          </motion.div>:''\r\n        }\r\n      </div>\r\n\r\n      <br />\r\n\r\n      <div className={classes.section}>\r\n        <motion.div\r\n        initial={{y : -10}}\r\n        animate={{y : 0}}\r\n        transition={{ duration: 0.6 }}>\r\n          <Typography variant='h5'>\r\n            Solution visualization\r\n          </Typography>\r\n        </motion.div>\r\n        <br/><Divider /><br/>\r\n\r\n        {algoData.Algorithm !== '' ?\r\n          <motion.div\r\n          initial={{opacity : 0}}\r\n          animate={{ opacity: 1}}\r\n          transition={{ duration: 0.8 }}>\r\n            <TableContainer>\r\n              <ThemeProvider theme={theme}>\r\n                {getTable()}\r\n              </ThemeProvider>\r\n            </TableContainer>\r\n          </motion.div>\r\n        : ''}\r\n        <br/>\r\n      </div>\r\n\r\n    {/* Detail section */}\r\n    {/* <div className={classes.section}>\r\n        <motion.div\r\n        initial={{y : -15}}\r\n        animate={{y : 0}}\r\n        transition={{ duration: 0.6 }}>\r\n          <Typography variant='h5'>\r\n            Details\r\n          </Typography>\r\n        </motion.div>\r\n        <br/><Divider />\r\n\r\n        <div className={classes.section}>\r\n          <Typography variant='subtitle1'>\r\n            details ...{algoData.detail_steps}\r\n          </Typography>\r\n        </div>\r\n      </div> */}\r\n    </Paper>\r\n  );\r\n}\r\n","const fifoAlgo = (ref_str, nframes) => {\r\n    let frames_state = [],//frames at any instance\r\n    faults=1,\r\n    hits_row = [],\r\n    detailSteps = [];//[frame, location] \r\n\r\n    detailSteps.push([ref_str[0], -1]);\r\n    frames_state.push(Array(nframes).fill(-1))\r\n    frames_state[frames_state.length-1][0]=ref_str[0]\r\n    hits_row.push(0);\r\n\r\n    for(let i=1; i<ref_str.length; i++){\r\n        // returns the frame num of frame f\r\n        let frameId = frames_state[frames_state.length-1].indexOf(ref_str[i]);\r\n        // if present do nothing\r\n        if(frameId !== -1){\r\n            // frameId === -1 => not present else frame location\r\n            detailSteps.push([ref_str[i], frameId]);\r\n            frames_state.push([...frames_state[frames_state.length-1]])\r\n            hits_row.push(1);\r\n            continue;\r\n        }\r\n        // if not \r\n        else{\r\n            // find the first entered frame i\r\n            detailSteps.push([ref_str[i], frameId]);\r\n            frames_state.push([...frames_state[frames_state.length-1]])\r\n            // faults%nframes === location of frame to be replaced\r\n            frames_state[frames_state.length-1][faults%nframes]=ref_str[i]\r\n            hits_row.push(0);\r\n            faults++\r\n        }\r\n    }\r\n    return [faults, frames_state, detailSteps, hits_row] \r\n}\r\n\r\n\r\nconst outputCompatibleFifoData = (ref_str, nframes) => {\r\n    const [faults, frames_state, detailSteps, hits_row] = fifoAlgo(ref_str, nframes);\r\n    const tableData=[];\r\n    for(let i=0; i<nframes; i++){\r\n        let temp = []\r\n        for(let j=0; j<ref_str.length; j++)\r\n            temp.push(frames_state[j][i])\r\n        tableData.push(temp)\r\n    }\r\n    return [faults, tableData, detailSteps, hits_row]\r\n}\r\n\r\nexport default outputCompatibleFifoData;\r\n// outputCompatibleFifoData([1, 5, 2, 3, 6, 3, 5, 1, 4, 2, 0, 5, 3, 7], 4)\r\n","const optimalAlgo = (ref_str, nframes) => {\r\n    let frames_state = [],//frames at any instance\r\n    faults=1,\r\n    hits_row = [],\r\n    detailSteps = [];//[frame, location] \r\n\r\n    detailSteps.push([ref_str[0], -1]);\r\n    frames_state.push(Array(nframes).fill(-1))\r\n    frames_state[frames_state.length-1][0]=ref_str[0]\r\n    hits_row.push(0);\r\n\r\n    for(let i=1; i<ref_str.length; i++){\r\n        // returns the frame num of frame f\r\n        let frameId = frames_state[frames_state.length-1].indexOf(ref_str[i]);\r\n        // if present do nothing\r\n        if(frameId !== -1){\r\n            // frameId === -1 => not present else frame location\r\n            detailSteps.push([ref_str[i], frameId]);\r\n            frames_state.push([...frames_state[frames_state.length-1]])\r\n            hits_row.push(1);\r\n            continue;\r\n        }\r\n        // if not \r\n        else{\r\n            // find the first entered frame i\r\n            detailSteps.push([ref_str[i], frameId]);\r\n            frames_state.push([...frames_state[frames_state.length-1]])\r\n            \r\n            //finding frame to be replaced\r\n            let frameNum=-1,location=i;\r\n            for(let j=0; j<nframes; j++){\r\n                let temp = ref_str.indexOf(frames_state[frames_state.length-1][j], i)\r\n                if(temp === -1){\r\n                    frameNum = j;\r\n                    break;\r\n                }\r\n                else if(temp>location){\r\n                    location = temp\r\n                    frameNum = j\r\n                }\r\n            }\r\n\r\n            frames_state[frames_state.length-1][frameNum]=ref_str[i]\r\n            \r\n            hits_row.push(0);\r\n            faults++\r\n        }\r\n    }\r\n    return [faults, frames_state, detailSteps, hits_row] \r\n}\r\n\r\n\r\nconst outputCompatibleOptimalData= (ref_str, nframes) => {\r\n    const [faults, frames_state, detailSteps, hits_row] = optimalAlgo(ref_str, nframes);\r\n    const tableData=[];\r\n    for(let i=0; i<nframes; i++){\r\n        let temp = []\r\n        for(let j=0; j<ref_str.length; j++)\r\n            temp.push(frames_state[j][i])\r\n        tableData.push(temp)\r\n    }\r\n    return [faults, tableData, detailSteps, hits_row]\r\n}\r\n\r\nexport default outputCompatibleOptimalData;\r\n// console.log(outputCompatibleOptimalData([1, 5, 2, 3, 6, 3, 5, 1, 4, 2, 0, 5, 3, 7], 4))\r\n","const lruAlgo = (ref_str, nframes) => {\r\n    let frames_state = [],//frames at any instance\r\n    faults=1,\r\n    hits_row = [],\r\n    detailSteps = [];//[frame, location] \r\n\r\n    detailSteps.push([ref_str[0], -1]);\r\n    frames_state.push(Array(nframes).fill(-1))\r\n    frames_state[frames_state.length-1][0]=ref_str[0]\r\n    hits_row.push(0);\r\n\r\n    for(let i=1; i<ref_str.length; i++){\r\n        // returns the frame num of frame f\r\n        let frameId = frames_state[frames_state.length-1].indexOf(ref_str[i]);\r\n        // if present do nothing\r\n        if(frameId !== -1){\r\n            // frameId === -1 => not present else frame location\r\n            detailSteps.push([ref_str[i], frameId]);\r\n            frames_state.push([...frames_state[frames_state.length-1]])\r\n            hits_row.push(1);\r\n            continue;\r\n        }\r\n        // if not \r\n        else{\r\n            // find the first entered frame i\r\n            detailSteps.push([ref_str[i], frameId]);\r\n            frames_state.push([...frames_state[frames_state.length-1]])\r\n              \r\n            //finding frame to be replaced\r\n            let frameNum=-1,location=i;\r\n            for(let j=0; j<nframes; j++){\r\n                let temp = ref_str.lastIndexOf(frames_state[frames_state.length-1][j], i)\r\n                if(temp === -1){\r\n                    frameNum = j;\r\n                    break;\r\n                }\r\n                else if(temp<location){\r\n                    location = temp\r\n                    frameNum = j\r\n                }\r\n            }\r\n\r\n            frames_state[frames_state.length-1][frameNum]=ref_str[i]\r\n            \r\n            hits_row.push(0);\r\n            faults++\r\n        }\r\n    }\r\n    return [faults, frames_state, detailSteps, hits_row] \r\n}\r\n\r\n\r\nconst outputCompatibleLRUData= (ref_str, nframes) => {\r\n    const [faults, frames_state, detailSteps, hits_row] = lruAlgo(ref_str, nframes);\r\n    const tableData=[];\r\n    for(let i=0; i<nframes; i++){\r\n        let temp = []\r\n        for(let j=0; j<ref_str.length; j++)\r\n            temp.push(frames_state[j][i])\r\n        tableData.push(temp)\r\n    }\r\n    return [faults, tableData, detailSteps, hits_row]\r\n}\r\n\r\nexport default outputCompatibleLRUData;\r\n// console.log(outputCompatibleLRUData([1, 5, 2, 3, 6, 3, 5, 1, 4, 2, 0, 5, 3, 7], 4))\r\n","import React, {useState} from 'react';\r\nimport { makeStyles, Grid } from '@material-ui/core';\r\nimport PageReplacementform from './pageComponents/form'\r\nimport PageReplacementOutput from './pageComponents/output'\r\nimport {fifoAlgo, optimalAlgo, lruAlgo} from './algorithms/replacementAlgos'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(2),\r\n  }\r\n}));\r\n\r\nexport default function PageReplacement(){\r\n    const classes = useStyles();\r\n\r\n    const [algoData, setstate] = useState({\r\n      'Reference_string': '',\r\n      'Reference_string_length': '',\r\n      'Algorithm': '',\r\n      'Total_Frames': '',\r\n      'Faults': '',\r\n      'Hits': '',\r\n      'ref_string_list': [],\r\n      'frame_rows': [[]],\r\n      'Hits_row':[],\r\n      'detail_steps':'',\r\n      'error_message':0\r\n    })\r\n\r\n  const checkError = (ref_str, nframes) => {\r\n    if(nframes <= 0) return false;\r\n    ref_str.forEach(element => {\r\n      if(element!==0 && !element) return false;\r\n    });\r\n    return true\r\n  }\r\n\r\n  const getNumList = (refStr, frames)=>{\r\n      refStr = refStr.split(',').map(x=>+x)\r\n      frames = Number(frames)\r\n      return [refStr, frames]\r\n  }\r\n\r\n  const getDataFromAlgo=(algo, refStr, frames)=>{\r\n      const [ref_str, nframes] = getNumList(refStr, frames)\r\n\r\n      console.log(\"page\",ref_str,\"frames\", nframes, \"\\\\\")\r\n\r\n      let faults, tableData, detailSteps, hits_row;\r\n      if(checkError(ref_str, nframes)){\r\n          switch(algo){\r\n              case 'First in First out (FIFO)':\r\n                  [faults, tableData, detailSteps, hits_row] = \r\n                      fifoAlgo(ref_str, nframes);\r\n                  break;\r\n              case 'Least Recently Used (LRU)':\r\n                  [faults, tableData, detailSteps, hits_row] = \r\n                      lruAlgo(ref_str, nframes);\r\n                  break;\r\n              case 'Optimal':\r\n                  [faults, tableData, detailSteps, hits_row] = \r\n                      optimalAlgo(ref_str, nframes);\r\n                  break;\r\n              default:\r\n                  console.log('pageReplacement/Page.js/algoInput-Incorrect')\r\n          }\r\n          setstate({\r\n            'Reference_string': refStr,\r\n            'Reference_string_length': ref_str.length,\r\n            'Algorithm': algo,\r\n            'Total_Frames': nframes,\r\n            'Faults': faults,\r\n            'Hits': ref_str.length-faults,\r\n            'ref_string_list': ref_str,\r\n            'frame_rows': tableData,\r\n            'Hits_row':hits_row,\r\n            'detail_steps':detailSteps,\r\n            'error_message': 0\r\n          })\r\n      }\r\n      else\r\n          setstate({...algoData, 'error_message':1})\r\n  }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grid container spacing={1}>\r\n                <Grid item xs={12} md={3}>\r\n                    <PageReplacementform getDataFromAlgo={getDataFromAlgo}/>\r\n                </Grid>\r\n                <Grid item xs={12} md={9}>\r\n                    <PageReplacementOutput algoData={algoData}/>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}"],"sourceRoot":""}